{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genre","className","src","alt","map","current","i","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","console","log","slice","medium_cover_image","genres","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAgCeA,MA5Bf,YAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,MACjD,OAAQ,sBAAKC,UAAU,QAAf,UACL,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACC,qBAAIA,UAAU,cAAd,UAA6BJ,EAA7B,KAAsCD,EAAtC,OACA,uBACA,oBAAIK,UAAU,cAAd,SAA6BD,EAAMI,KAAI,SAACC,EAASC,GAAV,OACrC,oBAAIL,UAAU,aAAd,SAAoCI,GAAJC,QAClC,uBACA,mBAAGL,UAAU,gBAAb,SAA8BH,IAC9B,8BCqCUS,G,kNA5CdC,MAAQ,CACPC,WAAW,EACXC,OAAQ,I,EAGTC,U,sBAAY,8BAAAC,EAAA,sEAC4BC,IAAMC,IAAI,6CADtC,gBACUJ,EADV,EACJK,KAAOA,KAAOL,OACrB,EAAKM,UAAS,WAAO,MAAO,CAACN,OAAOA,EAAQD,WAAW,MAF5C,2C,uDAKZ,WACCQ,KAAKN,c,oBAGN,WACC,MAA4BM,KAAKT,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACC,yBAAST,UAAU,YAAnB,SACCQ,EACA,qBAAKR,UAAU,SAAf,SACC,sBAAMA,UAAU,cAAhB,2BAED,qBAAKA,UAAU,SAAf,SACES,EAAON,KAAI,SAAAc,GAEZ,OADAC,QAAQC,IAAIF,GAEX,cAAC,EAAD,CAECvB,GAAIuB,EAAMvB,GACVE,MAAOqB,EAAMrB,MACbD,KAAMsB,EAAMtB,KACZE,QAASoB,EAAMpB,QAAQuB,MAAM,EAAG,KAAO,MACvCtB,OAAQmB,EAAMI,mBACdtB,MAAOkB,EAAMK,QANRL,EAAMvB,e,GA5BA6B,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80383e6b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({id, year, title, summary, poster, genre}){\n\treturn (<div className=\"movie\">\n\t\t\t\t<img src={poster} alt={title} title={title}></img>\n\t\t\t\t<div className=\"movie_data\">\n\t\t\t\t\t<h1 className=\"movie_title\">{title} ({year})</h1>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<ul className=\"movie_genre\">{genre.map((current, i) => (\n\t\t\t\t\t\t\t<li className=\"genre_item\" key={i}>{current}</li>))}</ul>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p className=\"movie_summary\">{summary}</p>\n\t\t\t\t\t<br></br>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t</div>);\n}\n\nMovie.propTypes = {\n\tid: PropTypes.number,\n\tyear: PropTypes.number,\n\ttitle: PropTypes.string,\n\tsummary: PropTypes.string,\n\tposter: PropTypes.string,\n\tgenre: PropTypes.string\n};\n\nexport default Movie;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\"\n\nclass App extends React.Component{\n\tstate = {\n\t\tisLoading: true,\n\t\tmovies: []\n\t};\n\n\tgetMovies = async () => {\n\t\tconst {data: {data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\t\tthis.setState(() => {return {movies:movies, isLoading: false}});\n\t}\n\t\n\tcomponentDidMount(){\n\t\tthis.getMovies();\n\t}\n\n\trender() {\n\t\tconst {isLoading, movies} = this.state;\n\t\treturn(\n\t\t\t<section className=\"container\">\n\t\t\t{isLoading ? (\n\t\t\t\t<div className=\"loader\">\n\t\t\t\t\t<span className=\"loader_text\">Loading....</span>\n\t\t\t\t</div>) : (\n\t\t\t\t<div className=\"movies\">\n\t\t\t\t\t{movies.map(movie => {\n\t\t\t\t\tconsole.log(movie); \n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Movie \n\t\t\t\t\t\t\tkey={movie.id} \n\t\t\t\t\t\t\tid={movie.id} \n\t\t\t\t\t\t\ttitle={movie.title} \n\t\t\t\t\t\t\tyear={movie.year} \n\t\t\t\t\t\t\tsummary={movie.summary.slice(0, 140) + '...'}\n\t\t\t\t\t\t\tposter={movie.medium_cover_image}\n\t\t\t\t\t\t\tgenre={movie.genres}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t\t\t})}\t\n\t\t\t\t\t\t</div>)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t</section>);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}